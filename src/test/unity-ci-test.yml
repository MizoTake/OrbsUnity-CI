version: 2.1

commands:
  setup:
    description: "Unity Test Setup"
    steps:
      - run:
          name: craete project
          command: |
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile Unity.ulf || exit 0
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -createProject .
            cp -pR ./ci-test/* ./Assets/
          working_directory: .

executors:
  unity_executor:
    docker:
      - image: gableroux/unity3d:2019.1.0f2
        environment:
          UNITY_LICENSE_BASE64: ${UNITY_LICENSE_BASE64}

jobs:
  unity-ci-build-windows:
    executor: unity_executor
    steps:
      - unity-ci/unity_activate
      - setup
      - unity-ci/build:
          platform: Win
          method: Build.Execute
      - unity-ci/zip:
          directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-build-webgl:
    executor: unity_executor
    steps:
      - checkout
      - setup
      - unity-ci/build:
          platform: WebGL
          method: Build.Execute
      - unity-ci/zip:
            directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-build-osxuniversal:
    executor: unity_executor
    steps:
      - checkout
      - setup
      - unity-ci/build:
          platform: OSXUniversal
          method: Build.Execute
      - unity-ci/zip:
            directory: ./Build/
      - store_artifacts:
          path: ./Build/
  unity-ci-test-editmode:
    executor: unity_executor
    steps:
      - checkout
      - setup
      - unity-ci/test:
          mode: editmode
  unity-ci-test-playmode:
    executor: unity_executor
    steps:
      - checkout
      - setup
      - unity-ci/test:
          mode: playmode