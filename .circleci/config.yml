version: 2.1
orbs:
  orb-tools: circleci/orb-tools@2.0.0
  unity-ci:
    commands:
      unity_activate:
        description: "Unity License Activate"
        steps:
          - run:
              name: activate
              command: |
                apt update && apt install libunwind8 -y
                echo ${UNITY_LICENSE_BASE64} | base64 -di | tr -d '\r' > .circleci/Unity.ulf
                /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity.ulf || exit 0
      build:
        description: "Unity Build"
        parameters:
          platform:
            description: "Build Target Platform"
            type: string
          method:
            description: "Build Execute Method"
            type: string
        steps:
          - run:
              name: build run
              command: |
                /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod << parameters.method >> -buildTarget << parameters.platform >>
              working_directory: .
      test:
        description: "Unity Test"
        parameters:
          mode:
            description: "Test Target Platform"
            type: string
        steps:
          - run:
              name: test run
              command: |
                mkdir ./test-results
                /opt/Unity/Editor/Unity -quit -nographics -silent-crashes -batchmode -logFile -projectPath . -runTests -testPlatform << parameters.mode >> -testResults ./test-results/results.xml
              working_directory: .
      zip:
        description: "Build Content Archive"
        steps:
          - run:
              name: zip archive
              command: |
                apt update && apt-get install -y zip
                zip archive -r ./Build/
                mv ./archive.zip ./Build/
              working_directory: .
    jobs:
      build:
        parameters:
          exec:
            type: executor
          method:
            description: "Build Execute Method"
            type: string
          platform:
            description: "Test Target Platform"
            type: string
          zip:
            description: "Archive Build Contents"
            default: false
            type: boolean
        executor: << parameters.exec >>
        steps:
          - checkout
          - unity_activate
          - build:
              platform: << parameters.platform >>
              method: << parameters.method >>
          - when:
              condition: << parameters.zip >>
              steps:
                - zip
          - store_artifacts:
              path: ./Build/
      test:
        parameters:
          exec:
            type: executor
          mode:
            description: "Test Target Mode"
            type: string
        executor: << parameters.exec >>
        steps:
          - checkout
          - unity_activate
          - test:
              mode: << parameters.mode >>
          - store_test_results:
              path: ./test-results
executors:
  unity_executor:
    docker:
      - image: gableroux/unity3d:2019.1.0f2
workflows:
  version: 2
  test:
    jobs:
      - unity-ci/build:
          name: Build Execute Win
          exec: unity_executor
          platform: Win
          method: Build.Execute
          zip: true
      - unity-ci/build:
          name: Build Execute WebGL
          exec: unity_executor
          platform: WebGL
          method: Build.Execute
          zip: true
      - unity-ci/build:
          name: Build Execute OSXUniversal
          exec: unity_executor
          platform: OSXUniversal
          method: Build.Execute
          zip: true
      - unity-ci/test:
          name: Edit Mode Test
          exec: unity_executor
          mode: editmode
      - unity-ci/test:
          name: Play Mode Test
          exec: unity_executor
          mode: playmode
      - orb-tools/publish:
          branches:
            ignore:
              - master
          orb-path: .circleci/orb.yml
          orb-ref: mizotake/unity-ci@dev:${CIRCLE_BRANCH}
          publish-token-variable: $CIRCLECI_API_TOKEN
          validate: true
