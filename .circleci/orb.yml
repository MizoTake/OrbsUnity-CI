version: 2.1
description: "Unity CI Orb"

commands:
  unity_activate:
    description: "Unity License Activate"
    parameters:
      license:
        description: "Unity License"
        type: env_var_name
      version:
        description: "Unity Version"
        type: string
    steps:
      - run:
          name: activate
          command: |
            apt update && apt install libunwind8 jq -y
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -logFile -createManualActivationFile || exit 0
            cat Unity_v<< parameters.version >>.alf
            curl -i -X POST -H "Content-Type:application/xml" -d @Unity_v<< parameters.version >>.alf 'https://license.unity3d.com/genesis/activation/create-transaction'
            curl -i -X PUT -H "Content-Type:application/json" -d '{"transaction":{"serial":{"type":"personal"}}}' 'https://license.unity3d.com/genesis/activation/update-transaction'
            curl -i -X POST -H "Content-Type:application/json" 'https://license.unity3d.com/genesis/activation/download-license' | jq '.xml' > .circleci/Unity.ulf
            # echo ${<< parameters.license >>} | base64 -di | tr -d '\r' > .circleci/Unity.ulf
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity.ulf || exit 0
  build:
    description: "Unity Build"
    parameters:
      platform:
        description: "Build Target Platform"
        type: string
      method:
        description: "Build Execute Method"
        type: string
    steps:
      - run:
          name: build run
          command: |
            /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod << parameters.method >> -buildTarget << parameters.platform >>
          working_directory: .
  test:
    description: "Unity Test"
    parameters:
      mode:
        description: "Test Target Platform"
        type: string
    steps:
      - run:
          name: test run
          command: |
            mkdir ./test-results
            /opt/Unity/Editor/Unity -quit -nographics -silent-crashes -batchmode -logFile -projectPath . -runTests -testPlatform << parameters.mode >> -testResults ./test-results/results.xml
          working_directory: .
  zip:
    description: "Build Content Archive"
    steps:
      - run:
          name: zip archive
          command: |
            apt update && apt-get install -y zip
            zip archive -r ./Build/
            mv ./archive.zip ./Build/
          working_directory: .
jobs:
  build:
    parameters:
      exec:
        type: executor
      license:
        description: "Unity License"
        type: env_var_name
        default: UNITY_LICENSE_BASE64
      version:
        description: "Unity Version"
        type: string
      method:
        description: "Build Execute Method"
        type: string
      platform:
        description: "Test Target Platform"
        type: string
      zip:
        description: "Archive Build Contents"
        default: false
        type: boolean
    executor: << parameters.exec >>
    steps:
      - checkout
      - unity_activate:
          license: << parameters.license >>
          version: << parameters.version >>
      - build:
          platform: << parameters.platform >>
          method: << parameters.method >>
      - when:
          condition: << parameters.zip >>
          steps:
            - zip
      - store_artifacts:
          path: ./Build/
  test:
    parameters:
      exec:
        type: executor
      license:
        description: "Unity License"
        type: env_var_name
        default: UNITY_LICENSE_BASE64
      version:
        description: "Unity Version"
        type: string
      mode:
        description: "Test Target Mode"
        type: string
    executor: << parameters.exec >>
    steps:
      - checkout
      - unity_activate:
          license: << parameters.license >>
          version: << parameters.version >>
      - test:
          mode: << parameters.mode >>
      - store_test_results:
          path: ./test-results